--------------------Εργασια 3 ΥΣΒΔ
Σάμιος Γρηγόρης:1115201500141
Ιωαννιδης Γεωργιος:115201500049

--------------------------------




------------------Quiksort (Σάμιος Γρηγόρης):

Προσσέγγιση ταξινόμησης από πάνω προς τα κάτω.Δηλαδή δημιουργεία πίνακα που αποτελείται από τα bfblock* και τον αριθμό των records που έχει μέσα ,και εύρεση κάθε ν-οστης εγγραφής .
-SR_Createfile:δημιουργεία αρχείου και αρχικοποιήση με κωδικό.
-SR_OpenFile:ανοιγμα αρχείου και διάβασμα header αν είναι το σωστό.


-Create_Bf_block_array:δημιουργεία πίνακα που αποτελείται από τα bfblock*.
-Partition:Ταξινόμηση κομμάτι του πίνακα με βάση το pivot.
-Quiksort:Αναδρομική συνάρτηση ταξινόμησης όλου του πίνακα.
-Get_Record:Συνάρτηση για την εύρεση της ν-οστης εγγραφής μέσα στον πίνακα.
-Swap,Is_More_Than*:Συναρτήσεις για την σύγκριση και την ανταλλαγή τιμών μέσα στον πίνακα.
-CopyFile:Αντιγραφή BF_Files;


-----------------Merge Sort (Ιωαννίδης Γεώργιος)
Ορίζεται ως Group το σύνολο των blocks των οποίων τα στοιχεία είναι ταξινομημένα και αναπαριστάται από την εξής δομή.
struct Group{
  BF_Block *Block;        //Pointer του τρέχωντος block
  char *data;             //Pointer στο 1ο byte του Block
  int block_index;        //Αριθμός του Block μέσα στο αρχείο
  int index;              //Η θέση της τρέχουσας εγγραφής μέσα στο block.
  int ending_block_index; //Το τελευταίο block του Group. Χρησιμοποιείται ως συνθήκη τερματισμού για την επανάληψη που διαβάζει τα στοιχεία από τα blocks.
};
~~Merge Sort: Η συνάρτηση που ταξινομεί τα blocks και γράφει το αρχείο.
~~Κύρια επανάληψη: Η 1η επανάληψη τελειώνει όταν το μέγεθος του Group ξεπεράσει το μέγεθος του αρχείου, οπότε και τα στοιχεία θα είναι ταξινομημένα.
  ~1η εμφωλευμένη επανάληψη: Η επανάληψη κάθε φορά δημιουργεί έναν πίνακα GroupArray ο οποίος αναπαριστά το buffer και περιέχει τα blocks που κάνουν το merge. Tελειώνει όταν γίνουν merge sort όσα Groups χωράνε στο buffer κατά μήκους όλου του αρχείου.
    ~2η εμφωλευμένη επανάληψη: Η επανάληψη η οποία κάνει το merge sort και τελειώνει όταν ταξινομήσει όλα τα στοιχεία των block που είναι μέσα στο buffer. Τα ταξινομημένα αρχεία γράφονται με την βοήθεια της συνάρτησης SR_InsertEntry. Τα Groups, των οποίων όλα τα στοιχεία έχουν διαβαστεί και ταξινομηθεί, η τιμή data γίνεται NULL.

~~GroupArrayInit: Αρχικοποίηση ενός πίνακα στοιχείων Block και έχει μέγιστο μέγεθος bufferSize-1. Επιστρέφει pointer του πίνακα. Αν η συνάρτηση φτάσει στο τέλος του αρχείου χωρίς να βρει άλλα Group τότε επιστρέφει NULL.
~~findMin:        Δέχεται ως όρισμα τον πίνακα GroupArray και το μέγεθός του και τοποθετεί στην πρώτη θέση του πίνακα το block με το μικρότερο τρέχων στοιχείο. Τα Groups, των οποίων όλα τα στοιχεία έχουν διαβαστεί και ταξινομηθεί (που η τιμή data==NULL), τοποθετούνται στο τέλος του πίνακα και αγνοούνται στις μετέπειτα κλήσεις της συνάρτησης.
